{"version":3,"sources":["components/NavBar.js","components/List.js","components/Autocomplete.js","ExpensesData.js","components/ExpenseDetail.js","components/AutcompleteNoOptions.js","components/Home.js","components/Acordos.js","components/Fundos.js","components/Others.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["NavBar","props","history","AppBar","position","style","background","color","IconButton","button","edge","className","aria-label","onClick","back","Typography","variant","useStyles","makeStyles","theme","root","width","backgroundColor","palette","paper","FolderList","classes","List","ListItem","component","Link","to","ListItemText","primary","secondary","ListItemSecondaryAction","Divider","options","createFilterOptions","ControllableStates","React","useState","value","setValue","inputValue","setInputValue","align","onChange","event","newValue","title","noOptionsText","onInputChange","newInputValue","id","marginBottom","renderInput","params","TextField","label","expenses","name","url","expenseGroup","description","searchable","ExpenseDetail","ExpenseId","match","expenseData","expenseInfo","expenseName","result","filter","expenseRow","length","push","Paper","Button","Autocomplete","state","activeOption","filteredOptions","showOptions","userInput","e","console","log","currentTarget","optionName","toLowerCase","indexOf","setState","innerText","onKeyDown","keyCode","optionList","this","map","index","key","href","type","Component","Home","Grid","container","justify","spacing","item","xs","md","sm","padding","Acordos","Fundos","expenseNumber","expense","dir","undefined","Others","App","exact","path","render","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","r","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"kPAae,SAASA,EAAQC,GAAQ,IAC5BC,EAAYD,EAAZC,QAMR,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAPpB,CACVC,WAAY,QACZC,MAAO,UAMC,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAM,EAACC,KAAK,QAAQC,UAAU,OAAOJ,MAAM,UAAUK,aAAW,OAAQC,QAAS,kBAAMX,EAAQY,SACvG,kBAAC,IAAD,OAIJ,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,WAA/B,0B,mFClBdU,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,OACPC,gBAAiBH,EAAMI,QAAQjB,WAAWkB,WAKnC,SAASC,IACpB,IAAMC,EAAUT,IAEhB,OACI,kBAACU,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,aAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,8BAA8BC,UAAU,wFAC9D,kBAACC,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,YAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YACjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,SAASC,UAAU,wGACzC,kBAACC,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,YAC9B,kBAAC,IAAD,SAKZ,kBAACwB,EAAA,EAAD,MAEA,kBAACR,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,iBACjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,8CAAwCC,UAAU,kGACxE,kBAACC,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,YAC9B,kBAAC,IAAD,SAKZ,kBAACwB,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YACjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,kBAAkBC,UAAU,6HAClD,kBAACC,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,YAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,O,uCC4ENC,GAhISC,cAgIC,CACZ,qBACA,oBACA,uBACA,6BACA,iCACA,qDACA,oBACA,2BACA,eACA,uBACA,4CACA,2BACA,4BACA,wBACA,oBACA,gBACA,uBACA,mBACA,6BACA,+BACA,0BACA,8BACA,iBACA,wBACA,wBACA,wBACA,qCACA,2BACA,mDACA,mCACA,mCACA,kCACA,+BACA,6CACA,yBACA,mDACA,sCACA,UACA,8DACA,qCACA,iBACA,8BACA,qBACA,oBACA,oCACA,4BACA,uBACA,yBACA,qCACA,kCACA,sBACA,mBACA,mCAGW,SAASC,IAAsB,IAAD,EACfC,IAAMC,SAAS,MADA,mBAClCC,EADkC,KAC3BC,EAD2B,OAELH,IAAMC,SAAS,IAFV,mBAElCG,EAFkC,KAEtBC,EAFsB,KAIzC,OACI,6BAEI,kBAAC9B,EAAA,EAAD,CAAY+B,MAAM,OAAO9B,QAAQ,MAAjC,mBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,UAAU8B,MAAM,QAApC,gEACA,kBAAC,IAAD,CACIJ,MAAOA,EACPK,SAAU,SAACC,EAAOC,GACU,kBAAbA,EACTN,EAASM,GACAA,GAAYA,EAASL,WAE9BD,EAAS,CACPO,MAAOD,EAASL,aAGlBD,EAASM,IAMfL,WAAYA,EACZO,cAAc,kCAEdC,cAAe,SAACJ,EAAOK,GACnBR,EAAcQ,IAIlBC,GAAG,2BACHjB,QAASA,EACThC,MAAO,CAAEgB,MAAO,OAAQkC,aAAc,QACtCC,YAAa,SAACC,GAAD,OAAY,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAM,GAAG3C,QAAQ,kBCxO1E,IAAM4C,EAAW,CACpB,CACIC,KAAM,kBACNC,IAAK,gBACLC,aAAc,SACdC,YAAa,sCACbC,WAAY,oDAEhB,CACIJ,KAAK,oBACLC,IAAK,kBACLC,aAAc,UACdC,YAAa,kBACbC,WAAY,mE,kBCWdhD,EAAYC,YAAW,IAMd,SAASgD,EAAcjE,GAAQ,IAGlCkE,EAFUlE,EAAVmE,MACAX,OACAU,UAGAjE,GADQe,IACIhB,EAAZC,SACFmE,EAAcT,EAPqB,EAQHnB,mBAAS4B,GARN,mBAQlCC,EARkC,KAUrCC,GAVqC,KAUvBJ,GAEZK,EAASF,EAAYG,QAAO,SAAAC,GAAU,OAAIA,EAAWZ,KAAOS,KAElE,OAAIC,EAAOG,OAAS,EAEZ,oCACI,kBAACxE,EAAA,EAAD,CAAQC,SAAS,UACb,kBAAC,IAAD,KACI,kBAACI,EAAA,EAAD,CAAYC,QAAM,EAACC,KAAK,QAAQC,UAAU,OAAOJ,MAAM,UAAUK,aAAW,OAAOC,QAAS,kBAAMX,EAAQ0E,KAAK,OAC3G,kBAAC,IAAD,OAIJ,kBAAC7D,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,WAA/B,yBAKR,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,MAAMuD,GAC1B,kBAACM,EAAA,EAAD,CAAO7D,QAAQ,YACX,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,+CAMJ,kBAACD,EAAA,EAAD,CAAYC,QAAQ,QACfwD,EAAO,GAAGR,aAEf,6BACA,kBAACc,EAAA,EAAD,CAAQ9D,QAAQ,YAAYT,MAAM,WAAlC,kCAMJ,oCACI,kBAACP,EAAD,UACA,kBAACe,EAAA,EAAD,CAAYC,QAAQ,MAAMuD,GAC1B,kBAACM,EAAA,EAAD,CAAO7D,QAAQ,YACX,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,4BAEA,kBAACW,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,yBACjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,SAASC,UAAU,wGACzC,kBAACC,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,YAC9B,kBAAC,IAAD,Y,oCCwCjBmE,EAhHf,4MAIEC,MAAQ,CACNC,aAAc,EACdC,gBAAiB,GACjBC,aAAa,EACbC,UAAW,IARf,EAWErC,SAAW,SAACsC,GACVC,QAAQC,IAAI,aADI,IAGRlD,EAAY,EAAKpC,MAAjBoC,QACF+C,EAAYC,EAAEG,cAAc9C,MAE5BwC,EAAkB7C,EAAQoC,QAC9B,SAACgB,GAAD,OACEA,EAAWC,cAAcC,QAAQP,EAAUM,gBAAkB,KAGjE,EAAKE,SAAS,CACZX,aAAc,EACdC,kBACAC,aAAa,EACbC,UAAWC,EAAEG,cAAc9C,SA1BjC,EA8BE7B,QAAU,SAACwE,GACT,EAAKO,SAAS,CACZX,aAAc,EACdC,gBAAiB,GACjBC,aAAa,EACbC,UAAWC,EAAEG,cAAcK,aAnCjC,EAsCEC,UAAY,SAACT,GAAO,IAAD,EACyB,EAAKL,MAAvCC,EADS,EACTA,aAAcC,EADL,EACKA,gBAEtB,GAAkB,KAAdG,EAAEU,QACJ,EAAKH,SAAS,CACZX,aAAc,EACdE,aAAa,EACbC,UAAWF,EAAgBD,UAExB,GAAkB,KAAdI,EAAEU,QAAgB,CAC3B,GAAqB,IAAjBd,EACF,OAEF,EAAKW,SAAS,CAAEX,aAAcA,EAAe,SACxC,GAAkB,KAAdI,EAAEU,QAAgB,CAC3B,GAAId,IAAiBC,EAAgBP,OAAS,EAE5C,YADAW,QAAQC,IAAIN,GAGd,EAAKW,SAAS,CAAEX,aAAcA,EAAe,MAzDnD,uDA6DY,IAQJe,EANFjD,EAKEkD,KALFlD,SACAlC,EAIEoF,KAJFpF,QACAiF,EAGEG,KAHFH,UAJK,EAOHG,KADFjB,MAASC,EANJ,EAMIA,aAAcC,EANlB,EAMkBA,gBAAiBC,EANnC,EAMmCA,YAAaC,EANhD,EAMgDA,UA4BvD,OAzBID,GAAeC,IAEfY,EADEd,EAAgBP,OAEhB,wBAAIhE,UAAU,WACXuE,EAAgBgB,KAAI,SAACT,EAAYU,GAChC,IAAIxF,EAIJ,OAHIwF,IAAUlB,IACZtE,EAAY,iBAGZ,wBAAIA,UAAWA,EAAWyF,IAAKX,EAAY5E,QAASA,GACjD4E,OAQT,yBAAK9E,UAAU,cACb,uBAAG0F,KAAK,WAAR,qCAMN,oCACE,yBAAK1F,UAAU,UACb,2BACE2F,KAAK,OACL3F,UAAU,aACVoC,SAAUA,EACV+C,UAAWA,EACXpD,MAAO0C,KAGVY,OA1GT,GAAkCO,a,SCmBnBC,EA1BF,WAKT,OACI,yBAAK7F,UAAU,OACX,kBAAC8F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACtC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC9G,EAAD,OAEJ,kBAACyG,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,GAAI3G,MAVxB,CACV4G,QAAS,UAUG,kBAAClG,EAAA,EAAD,CAAYC,QAAQ,MAApB,+CAEA,kBAAC,EAAD,MAIA,kBAACS,EAAD,UCNdR,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,OACPC,gBAAiBH,EAAMI,QAAQjB,WAAWkB,WAInC,SAAS0F,EAAQjH,GAC5B,IAAMyB,EAAUT,IACRf,EAAYD,EAAZC,QAER,OACI,oCACI,kBAACuG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC3G,EAAA,EAAD,CAAQC,SAAS,UACb,kBAAC,IAAD,KACI,kBAACI,EAAA,EAAD,CAAYC,QAAM,EAACC,KAAK,QAAQC,UAAU,OAAOJ,MAAM,UAAUK,aAAW,OAAOC,QAAS,kBAAMX,EAAQ0E,KAAK,OAC3G,kBAAC,IAAD,OAIJ,kBAAC7D,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,WAA/B,0BAMZ,kBAACkG,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,0DACA,kHAEA,kBAACnF,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,wBAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,uBACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,sBACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAKJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,yBACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,sBACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,6BACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,gCACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,mBACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAIJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,0BACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,0BACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAIJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,0BACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAIJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,uCACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAIJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,6BACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,qDACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAIJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,wCACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAACT,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACrB,kBAACQ,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAG,YAEjC,kBAACC,EAAA,EAAD,CAAcC,QAAQ,oCACtB,kBAACE,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,OAGJ,kBAAC0C,EAAA,EAAD,CAAQ9D,QAAQ,WAAWT,MAAM,UAAUM,QAAS,kBAAMX,EAAQ0E,KAAK,OAAvE,sCCxOpB,IAAM3D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,OACPC,gBAAiBH,EAAMI,QAAQjB,WAAWkB,WAOnC,SAAS2F,EAAOlH,GAC3B,IAAMyB,EAAUT,IACRf,EAAYD,EAAZC,QACFmE,EAAcT,EAHc,EAIInB,mBAAS4B,GAJb,mBAI3BC,EAJ2B,UA0BlC,OACI,oCACI,kBAACmC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC3G,EAAA,EAAD,CAAQC,SAAS,UACb,kBAAC,IAAD,KACI,kBAACI,EAAA,EAAD,CAAYC,QAAM,EAACC,KAAK,QAAQC,UAAU,OAAOJ,MAAM,UAAUK,aAAW,OAAOC,QAAS,kBAAMX,EAAQ0E,KAAK,OAC3G,kBAAC,IAAD,OAIJ,kBAAC7D,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,WAA/B,0BAMZ,kBAACkG,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,qCACA,iIAGA,kBAACnF,EAAA,EAAD,CAAMhB,UAAWe,EAAQN,MACpBkD,EAAY4B,KAAI,SAAAkB,GAAa,MAAkC,UAA9BA,EAAcrD,cA3C/CsD,EA2CsFD,EA1CvG9B,QAAQgC,IAAID,EAAQxD,MAIhB,oCACI,kBAACjC,EAAA,EAAD,CAAUnB,QAAM,EAACoB,UAAWC,IAAMC,GAAE,WAAMsF,EAAQvD,MAE9C,kBAAC9B,EAAA,EAAD,CAAcC,QAASoF,EAAQxD,OAC/B,kBAAC1B,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYE,KAAK,MAAME,aAAW,gBAC9B,kBAAC,IAAD,SAIZ,kBAACwB,EAAA,EAAD,aA4BgHmF,EA3C5H,IAAqBF,MA8CL,kBAACvC,EAAA,EAAD,CAAQ9D,QAAQ,WAAWT,MAAM,UAAUM,QAAS,kBAAMX,EAAQ0E,KAAK,OAAvE,sCClEpB,IAAM3D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,OACPC,gBAAiBH,EAAMI,QAAQjB,WAAWkB,WAInC,SAASgG,EAAOvH,GACXgB,IACIhB,EAAZC,QADR,IAEMmE,EAAcT,EAGpB,OAFA0B,QAAQC,IAAIlB,GAGR,oCACI,kBAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC9G,EAAD,OAEJ,kBAACyG,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,2IACA,kBAAC/F,EAAA,EAAD,CAAYC,QAAQ,MAApB,uCACA,kBAAC6D,EAAA,EAAD,CAAO7D,QAAQ,YACX,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,4EAEJ,2BAAG,uBAAGqF,KAAK,KAAR,wCACH,2BAAG,uBAAGA,KAAK,KAAR,uBACH,2BAAG,uBAAGA,KAAK,KAAR,8BACH,2BAAG,uBAAGA,KAAK,KAAR,qDACH,2BAAG,uBAAGA,KAAK,KAAR,iCACH,2BAAG,uBAAGA,KAAK,KAAR,aACH,2BAAG,uBAAGA,KAAK,KAAR,yCAEH,kBAACtF,EAAA,EAAD,CAAYC,QAAQ,MAApB,yCACA,kBAAC8D,EAAA,EAAD,CAAQ9D,QAAQ,YAAYT,MAAM,WAAlC,oCCjBLkH,MAhBf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiB9F,UAAW2E,IAC9C,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,wBAAwB9F,UAAWqF,IACrD,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,uBAAuB9F,UAAWsF,IACpD,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,UAAU9F,UAAW2F,IACvC,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,gBAAgBC,OAAQ,SAAC3H,GAAD,OAAW,kBAAC,EAA0BA,MAChF,kBAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,2BAA2BC,OAAQ,SAAC3H,GAAD,OAAW,kBAACiE,EAAkBjE,SCjBvE4H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5D,MACvB,2DCRN,IAAMlE,EAAU+H,cAEhBC,IAASN,OACP,oCACA,kBAAC,IAAD,CAAQ1H,QAASA,EAAQiI,GAAC,GACxB,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvD,QAAQuD,MAAMA,EAAMC,a,6EEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.dc38fe32.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nexport default function NavBar (props) {\n    const { history } = props;\n    const style = {\n        background: 'white',\n        color: 'black'\n      };\n\n    return (\n        <div>\n            <AppBar position=\"static\" style={style}>\n                <ToolBar>\n                    <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\"  onClick={() => history.back()}>\n                        <ArrowBack />\n                    </IconButton>\n\n                    \n                    <Typography variant=\"h5\" color=\"inherit\">\n                        Selecione a despesa\n                    </Typography>\n                </ToolBar>\n            </AppBar>\n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\nexport default function FolderList() {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root}>\n            <ListItem button component={Link} to=\"/Acordos/\">\n\n                <ListItemText primary=\"Acordos, Impostos e Tarifas\" secondary=\"Acordos referente a algum débito anterior do condomínio, impostos ou tarifas.\" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem button component={Link} to=\"/Fundos/\">\n                <ListItemText primary=\"Fundos\" secondary=\"Fundos para eventual inadimplência, obras no condomínio ou cobrir despesas não previstas. \" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n\n            </ListItem>\n            <Divider />\n\n            <ListItem button component={Link} to=\"/ExpenseGroup\">\n                <ListItemText primary=\"Reformas, individualizações e rateios\" secondary=\"Valores destinados ao pagamento de serviços ou obras para o funcionamento do condomínio\" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n\n            <Divider />\n            <ListItem button component={Link} to=\"/Others/\">\n                <ListItemText primary=\"Outras despesas\" secondary=\"Despesas diversas, como deficit orcamentário, bonificação de fim de ano e usos de serviços do consomínio.\" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n        </List>\n    );\n}","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography'\nconst filter = createFilterOptions();\n\n/*export default function FreeSoloCreateOptionDialog() {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setDialogValue({\n      title: '',\n      year: '',\n    });\n\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    title: '',\n    year: '',\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      title: dialogValue.title,\n      year: parseInt(dialogValue.year, 10),\n    });\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'string') {\n            // timeout to avoid instant validation of the dialog's form.\n            setTimeout(() => {\n              toggleOpen(true);\n              setDialogValue({\n                title: newValue,\n                year: '',\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              title: newValue.inputValue,\n              year: '',\n            });\n          } else {\n            setValue(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          if (params.inputValue !== '') {\n            filtered.push({\n              inputValue: params.inputValue,\n              title: `Add \"${params.inputValue}\"`,\n            });\n          }\n\n          return filtered;\n        }}\n        id=\"free-solo-dialog-demo\"\n        options={top100Films}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.title;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        renderOption={(option) => option.title}\n        style={{ width: 300 }}\n        freeSolo\n        renderInput={(params) => (\n          <TextField {...params} label=\"Free solo dialog\" variant=\"outlined\" />\n        )}\n      />\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id=\"form-dialog-title\">Add a new film</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did you miss any film in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.title}\n              onChange={(event) => setDialogValue({ ...dialogValue, title: event.target.value })}\n              label=\"title\"\n              type=\"text\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.year}\n              onChange={(event) => setDialogValue({ ...dialogValue, year: event.target.value })}\n              label=\"year\"\n              type=\"number\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n*/\n\nconst options = [\n    'Acordo - Débito',\n    'Acordo - Judicial',\n    'Acordo - Trabalhista',\n    'Bonificação natalina',\n    'Cartão - Controle de acesso',\n    'Deficit Orçamentário - Resp. Proprietário',\n    'Despesas - Extras',\n    'Documentação/Laudo',\n    'Fundo - AVCB',\n    'Fundo - Benfeitorias',\n    'Fundo - Estacionamento - Manutenção',\n    'Fundo - Inadimplência',\n    'Fundo - Indenização',\n    'Fundo - Investimentos',\n    'Fundo - Melhorias',\n    'Fundo - Obras',\n    'Fundo - Provisões',\n    'Fundo de Reserva',\n    'Fundo Obras - Complementar',\n    'Fundo Reserva - Complementar',\n    'Fundo Reserva - Garagem',\n    'Imposto - Energia / Água',\n    'Imposto - IPTU',\n    'Imposto - IPTU - 2016',\n    'Imposto - IPTU - 2017',\n    'Imposto - IPTU - 2018',\n    'Imposto - IPTU - Subsolo / Garagem',\n    'Imposto - IPTU - Terreno',\n    'Imposto sobre serviços de condomínio (ISS)',\n    'Individualização - Água',\n    'Individualização - Energia',\n    'Individualização - Gás',\n    'Instalação - Medidores',\n    'Instalação - Sistema de Segurança',\n    'Investimentos iniciais',\n    'ISS - Imposto sobre serviços de condomínio',\n    'Multa - Infração regulamentar',\n    'Pintura',\n    'Rateio - Aquisição / Instalação de Equipamentos',\n    'Rateio - Extra - Serviço / Obra',\n    'Rateio - Obras',\n    'Rateio Obras - Complementar',\n    'Reforma - Elevador',\n    'Reforma - Fachada',\n    'Reforma - Impermeabilização',\n    'Reforma - Tubulação',\n    'Reparo - Elétrico',\n    'Reparo - Hidráulico',\n    'Sistema Monitoramento/Segurança',\n    'Taxa municipal - Coleta de Lixo',\n    'Uso - Churrasqueira',\n    'Uso - Lavanderia',\n    'Uso - Serviço Condomínio',\n];\n\nexport default function ControllableStates() {\n    const [value, setValue] = React.useState(null);\n    const [inputValue, setInputValue] = React.useState('');\n\n    return (\n        <div>\n            \n            <Typography align=\"left\" variant=\"h6\">Nome da despesa</Typography>\n            <Typography variant=\"caption\" align=\"left\" >Qual nome mais se aproxima do que está escrito no boleto?</Typography>\n            <Autocomplete\n                value={value}\n                onChange={(event, newValue) => {\n                    if (typeof newValue === 'string') {\n                      setValue(newValue);\n                    } else if (newValue && newValue.inputValue) {\n                      // Create a new value from the user input\n                      setValue({\n                        title: newValue.inputValue,\n                      });\n                    } else {\n                      setValue(newValue);\n                    }\n                  }}\n\n                  \n\n                inputValue={inputValue}\n                noOptionsText=\"Não achei a despesa na lista\"\n\n                onInputChange={(event, newInputValue) => {\n                    setInputValue(newInputValue);\n                }}\n\n\n                id=\"controllable-states-demo\"\n                options={options}\n                style={{ width: '100%', marginBottom: '48px' }}\n                renderInput={(params) => <TextField {...params} label=\"\" variant=\"outlined\" />}\n            />\n        </div>\n    );\n}\n\n/* filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n          \n                    if (params.inputValue !== '') {\n                      filtered.push({\n                        inputValue: params.inputValue,\n                        title: `Add \"${params.inputValue}\"`,\n                      });\n                    }\n          \n                    return filtered;\n                  }}\n\n                  getOptionLabel={(option) => {\n                    // Value selected with enter, right from the input\n                    if (typeof option === 'string') {\n                      return option;\n                    }\n                    // Add \"xxx\" option created dynamically\n                    if (option.inputValue) {\n                      return option.inputValue;\n                    }\n\n                    // Regular option\n                    return option.title;\n                  }}\n */","export const expenses = [\n    {\n        name: \"Fundo - Reserva\",\n        url: \"Fundo-Reserva\",\n        expenseGroup: \"Fundos\",\n        description: \"Descrição do fundo de reserva\",\n        searchable: \"Fundo - Reserva, Fundo de Reserva, Fundo Reserva\"\n    },\n    {\n        name:'Acordo - Judicial',\n        url: \"Acordo-Judicial\",\n        expenseGroup: \"Acordos\",\n        description: 'Descriç±a',\n        searchable: 'Acordo de justiça, Acordo extrajudicial, Acordo - Justicial'\n    }\n];","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport NavBar from './NavBar'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport IconButton from '@material-ui/core/IconButton';\nimport { expenses } from '../ExpensesData'\nimport { Route, BrowserHistory, Switch } from 'react-router-dom'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\n\n\n\nimport { Typography, Button } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n\n\n});\n\n\nexport default function ExpenseDetail(props) {\n    const { match } = props;\n    const { params } = match;\n    const { ExpenseId } = params;\n\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    const [expenseInfo, setExpenseInfo] = useState(expenseData)\n\n    let expenseName = ExpenseId\n\n    const result = expenseInfo.filter(expenseRow => expenseRow.url == expenseName);\n\n    if (result.length > 0) {\n        return (\n            <>\n                <AppBar position=\"static\">\n                    <ToolBar>\n                        <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                            <ArrowBack />\n                        </IconButton>\n\n\n                        <Typography variant=\"h5\" color=\"inherit\">\n                            Selecione a despesa\n                    </Typography>\n                    </ToolBar>\n                </AppBar>\n                <Typography variant=\"h4\">{expenseName}</Typography>\n                <Paper variant=\"outlined\">\n                    <Typography variant=\"h6\">Você pode pedir reembolso dessa despesa</Typography>\n\n                </Paper>\n\n                \n\n                <Typography variant=\"body\">\n                    {result[0].description}\n                </Typography>\n                <br />\n                <Button variant=\"contained\" color=\"primary\">Pedir reembolso dessa despesa</Button>\n            </>\n        );\n    }\n    else {\n        return (\n            <>\n                <NavBar> </NavBar>\n                <Typography variant=\"h4\">{expenseName}</Typography>\n                <Paper variant=\"outlined\">\n                    <Typography variant=\"h6\">Despesa não existente</Typography>\n\n                    <List>\n                    <ListItem button component={Link} to=\"/react-deploy/fundos/\">\n                        <ListItemText primary=\"Fundos\" secondary=\"Fundos para eventual inadimplência, obras no condomínio ou cobrir despesas não previstas. \" />\n                        <ListItemSecondaryAction>\n                            <IconButton edge=\"end\" aria-label=\"comments\">\n                                <ChevronRight />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n\n                    </ListItem>\n                </List>\n\n                </Paper>\n            </>\n        );\n    }\n\n\n}","/* eslint-disable no-use-before-define */\nimport React, { Component } from 'react';\nimport { makeStyles} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nimport PropTypes from 'prop-types';\n\nexport class Autocomplete extends Component {\n  static propTypes = {\n    options: PropTypes.instanceOf(Array).isRequired\n  };\n  state = {\n    activeOption: 0,\n    filteredOptions: [],\n    showOptions: false,\n    userInput: ''\n  };\n\n  onChange = (e) => {\n    console.log('onChanges');\n\n    const { options } = this.props;\n    const userInput = e.currentTarget.value;\n\n    const filteredOptions = options.filter(\n      (optionName) =>\n        optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeOption: 0,\n      filteredOptions,\n      showOptions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n  onClick = (e) => {\n    this.setState({\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n  onKeyDown = (e) => {\n    const { activeOption, filteredOptions } = this.state;\n\n    if (e.keyCode === 13) {\n      this.setState({\n        activeOption: 0,\n        showOptions: false,\n        userInput: filteredOptions[activeOption]\n      });\n    } else if (e.keyCode === 38) {\n      if (activeOption === 0) {\n        return;\n      }\n      this.setState({ activeOption: activeOption - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeOption === filteredOptions.length - 1) {\n        console.log(activeOption);\n        return;\n      }\n      this.setState({ activeOption: activeOption + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n\n      state: { activeOption, filteredOptions, showOptions, userInput }\n    } = this;\n    let optionList;\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = (\n          <ul className=\"options\">\n            {filteredOptions.map((optionName, index) => {\n              let className;\n              if (index === activeOption) {\n                className = 'option-active';\n              }\n              return (\n                <li className={className} key={optionName} onClick={onClick}>\n                  {optionName}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      } else {\n        optionList = (\n          <div className=\"no-options\">\n            <a href=\"/Others\">Não achei a despesa na lista</a>\n          </div>\n        );\n      }\n    }\n    return (\n      <>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            className=\"search-box\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n        </div>\n        {optionList}\n      </>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React from 'react';\nimport NavBar from './NavBar'\nimport FolderList from './List'\nimport Autocomplete from './Autocomplete'\nimport AutocompleteNoOptions from './AutcompleteNoOptions'\nimport Grid from '@material-ui/core/Grid'\nimport { Typography, makeStyles } from '@material-ui/core';\n\n\nconst Home = () => {\n    const style = {\n        padding: '0 2em'\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container justify=\"center\" spacing={4}>\n                <Grid item xs={12}>\n                    <NavBar></NavBar>\n                </Grid>\n                <Grid item md={6} sm={12} style={style}>\n                    <Typography variant=\"h6\">Veja se pode pedir reembolso de uma despesa</Typography>\n\n                    <Autocomplete></Autocomplete>\n\n                    \n\n                    <FolderList></FolderList>\n                </Grid>\n            </Grid>\n        </div>\n\n    )\n}\n\nexport default Home;\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function Acordos(props) {\n    const classes = useStyles();\n    const { history } = props;\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={12}>\n                    <AppBar position=\"static\">\n                        <ToolBar>\n                            <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                                <ArrowBack />\n                            </IconButton>\n\n\n                            <Typography variant=\"h5\" color=\"inherit\">\n                                Selecione a despesa\n                    </Typography>\n                        </ToolBar>\n                    </AppBar>\n                </Grid>\n                <Grid item xs={6}>\n                    <p>Acordos, impostos e tarifas</p>\n                    <p>Acordos referente a algum débito anterior do condomínio, impostos ou tarifas.</p>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/:Acordo - Débito\">\n\n                            <ListItemText primary=\"Acordo - Débito\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Acordo - Judicial\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Acordo - Trabalhista\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Despesas - Extras\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Documentação/Laudo\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto - Energia / Água\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto - IPTU\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto - IPTU - 2016\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto - IPTU - 2017\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto - IPTU - 2018\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto - IPTU - Subsolo / Garagem\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto - IPTU - Terreno\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Imposto sobre serviços de condomínio (ISS)\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Multa - Infração regulamentar\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <List className={classes.root}>\n                        <ListItem button component={Link} to=\"/Acordos\">\n\n                            <ListItemText primary=\"Taxa municipal - Coleta de Lixo\" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                    </List>\n\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => history.push(\"/\")}>Voltar à lista de reembolsos</Button>\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport { expenses } from '../ExpensesData'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function Fundos(props) {\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    const [expenseInfo, setExpenseInfo] = useState(expenseData)\n\n    function showExpense(expense) {\n        console.dir(expense.name);\n\n\n        return (\n            <>\n                <ListItem button component={Link} to={`/${expense.url}`} >\n\n                    <ListItemText primary={expense.name} />\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"Go to Acordo\">\n                            <ChevronRight />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Divider />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={12}>\n                    <AppBar position=\"static\">\n                        <ToolBar>\n                            <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                                <ArrowBack />\n                            </IconButton>\n\n\n                            <Typography variant=\"h5\" color=\"inherit\">\n                                Selecione a despesa\n                    </Typography>\n                        </ToolBar>\n                    </AppBar>\n                </Grid>\n                <Grid item xs={6}>\n                    <p>Fundos</p>\n                    <p>Fundos para eventual inadimplência, obras no condomínio ou cobrir despesas não previstas.</p>\n\n\n                    <List className={classes.root}>\n                        {expenseInfo.map(expenseNumber => expenseNumber.expenseGroup == \"Fundos\" ? showExpense(expenseNumber) : undefined)}\n                    </List>\n\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => history.push(\"/\")}>Voltar à lista de reembolsos</Button>\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport { expenses } from '../ExpensesData'\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function Others(props) {\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    console.log(expenseData)\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={12}>\n                    <NavBar></NavBar>\n                </Grid>\n                <Grid item xs={6}>\n                    <p>Confira se a despesa não é de responsabilidade de inquilino e por isso não tem direito a reembolso:</p>\n                    <Typography variant=\"h6\">Despesas de pagamento de inquilinos</Typography>\n                    <Paper variant=\"outlined\">\n                        <Typography variant=\"h6\">Você não tem direito a pedir reembolso das despesas de inquilinos</Typography>\n                    </Paper>\n                    <p><a href=\"#\">Consumos do imóvel, como água</a></p>\n                    <p><a href=\"#\">Cotas condominiais</a></p>\n                    <p><a href=\"#\">Correções na fatura</a></p>\n                    <p><a href=\"#\">Encargos e honorários, como 13° salário</a></p>\n                    <p><a href=\"#\">Fundos para manutenção</a></p>\n                    <p><a href=\"#\">Impostos</a></p>\n                    <p><a href=\"#\">Uso dos serviços do condomínio</a></p>\n\n                    <Typography variant=\"h6\">Não é uma despesa de inquilino?</Typography>\n                    <Button variant=\"contained\" color=\"primary\">Pedir reembolso dessa despesa</Button>\n            </Grid>\n        </Grid>\n        </>\n    );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\n\nimport NavBar from './components/NavBar'\nimport FolderList from './components/List'\nimport Autocomplete from './components/Autocomplete'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box';\nimport ExpenseDetail from './components/ExpenseDetail'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Acordos from './components/Acordos'\nimport Fundos from './components/Fundos'\nimport Others from './components/Others'\nimport AutocompleteNoOptions from './components/AutcompleteNoOptions'\n\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/react-deploy/\" component={Home} />\n        <Route exact path=\"/react-deploy/acordos\" component={Acordos} />\n        <Route exact path=\"/react-deploy/fundos\" component={Fundos} />\n        <Route exact path=\"/Others\" component={Others} />\n        <Route exact path=\"/Autocomplete\" render={(props) => <AutocompleteNoOptions {...props} />} />\n        <Route exact path=\"/react-deploy/:ExpenseId\" render={(props) => <ExpenseDetail {...props} />} />\n        \n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from \"react-router-dom\";\n// import { Router as Router} from 'react-router-dom'\nimport { createBrowserHistory } from \"history\";\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <>\n  <Router history={history}r>\n    <App />\n  </Router>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}