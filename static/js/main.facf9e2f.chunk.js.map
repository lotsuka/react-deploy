{"version":3,"sources":["logo.svg","components/NavBar.js","components/List.js","components/Autocomplete.js","ExpensesData.js","components/ExpenseDetail.js","components/AutocompleteHightlight.js","components/Home.js","components/Acordos.js","components/Fundos.js","components/Reformas.js","components/Ordinarias.js","components/Outras.js","components/AutcompleteNoOptions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","history","AppBar","position","style","background","color","IconButton","button","edge","className","aria-label","onClick","back","Typography","variant","useStyles","makeStyles","theme","root","width","backgroundColor","palette","paper","FolderList","classes","List","ListItem","component","Link","to","ListItemText","primary","secondary","ListItemSecondaryAction","Divider","createFilterOptions","iptuTaxDescription","expenses","name","url","expenseGroup","description","searchable","appBarStyle","title","fontWeight","fontSize","lineHeight","margin","grid","padding","body1","subheadingMedium","grayHigh","buttonPrimary","textTransform","borderRadius","boxShadow","ExpenseDetail","ExpenseId","match","params","expenseData","useState","expenseInfo","expenseName","result","filter","expenseRow","length","Grid","container","justify","item","xs","push","md","sm","Paper","Button","fullWidth","size","AutocompleteHighlight","sort","a","b","id","options","getOptionLabel","option","renderInput","TextField","renderOption","inputValue","matches","parts","parse","map","part","index","text","key","highlight","filterOptions","filtered","console","log","Home","buttonSecondary","boxBackground","spacing","Box","Acordos","mt","expenseNumber","expense","undefined","Fundos","dir","Reformas","Ordinarias","href","Outras","Component","App","exact","path","render","Boolean","window","location","hostname","createBrowserHistory","createMuiTheme","light","main","dark","ReactDOM","ThemeProvider","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.facf9e2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nexport default function NavBar (props) {\n    const { history } = props;\n    const style = {\n        background: 'white',\n        color: 'black'\n      };\n\n    return (\n        <div>\n            <AppBar position=\"static\" style={style}>\n                <ToolBar>\n                    <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\"  onClick={() => history.back()}>\n                        <ArrowBack />\n                    </IconButton>\n\n                    \n                    <Typography variant=\"h5\" color=\"inherit\">\n                        Selecione a despesa\n                    </Typography>\n                </ToolBar>\n            </AppBar>\n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\nexport default function FolderList() {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root}>\n            <ListItem button component={Link} to=\"/Acordos/\">\n\n                <ListItemText primary=\"Acordos, Impostos e Tarifas\" secondary=\"Acordos referente a algum débito anterior do condomínio, impostos ou tarifas.\" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem button component={Link} to=\"/Fundos/\">\n                <ListItemText primary=\"Fundos\" secondary=\"Fundos para eventual inadimplência, obras no condomínio ou cobrir despesas não previstas. \" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n\n            </ListItem>\n            <Divider />\n\n            <ListItem button component={Link} to=\"/Reformas\">\n                <ListItemText primary=\"Reformas, individualizações e rateios\" secondary=\"Valores destinados ao pagamento de serviços ou obras para o funcionamento do condomínio\" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n\n            <Divider />\n            <ListItem button component={Link} to=\"/Outras/\">\n                <ListItemText primary=\"Outras despesas\" secondary=\"Despesas diversas, como deficit orcamentário, bonificação de fim de ano e usos de serviços do consomínio.\" />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <ChevronRight />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n        </List>\n    );\n}","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography'\nconst filter = createFilterOptions();\n\n/*export default function FreeSoloCreateOptionDialog() {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setDialogValue({\n      title: '',\n      year: '',\n    });\n\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    title: '',\n    year: '',\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      title: dialogValue.title,\n      year: parseInt(dialogValue.year, 10),\n    });\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'string') {\n            // timeout to avoid instant validation of the dialog's form.\n            setTimeout(() => {\n              toggleOpen(true);\n              setDialogValue({\n                title: newValue,\n                year: '',\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              title: newValue.inputValue,\n              year: '',\n            });\n          } else {\n            setValue(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          if (params.inputValue !== '') {\n            filtered.push({\n              inputValue: params.inputValue,\n              title: `Add \"${params.inputValue}\"`,\n            });\n          }\n\n          return filtered;\n        }}\n        id=\"free-solo-dialog-demo\"\n        options={top100Films}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.title;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        renderOption={(option) => option.title}\n        style={{ width: 300 }}\n        freeSolo\n        renderInput={(params) => (\n          <TextField {...params} label=\"Free solo dialog\" variant=\"outlined\" />\n        )}\n      />\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id=\"form-dialog-title\">Add a new film</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did you miss any film in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.title}\n              onChange={(event) => setDialogValue({ ...dialogValue, title: event.target.value })}\n              label=\"title\"\n              type=\"text\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.year}\n              onChange={(event) => setDialogValue({ ...dialogValue, year: event.target.value })}\n              label=\"year\"\n              type=\"number\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n*/\n\nconst options = [\n    'Acordo - Débito',\n    'Acordo - Judicial',\n    'Acordo - Trabalhista',\n    'Bonificação natalina',\n    'Cartão - Controle de acesso',\n    'Deficit Orçamentário - Resp. Proprietário',\n    'Despesas - Extras',\n    'Documentação/Laudo',\n    'Fundo - AVCB',\n    'Fundo - Benfeitorias',\n    'Fundo - Estacionamento - Manutenção',\n    'Fundo - Inadimplência',\n    'Fundo - Indenização',\n    'Fundo - Investimentos',\n    'Fundo - Melhorias',\n    'Fundo - Obras',\n    'Fundo - Provisões',\n    'Fundo de Reserva',\n    'Fundo Obras - Complementar',\n    'Fundo Reserva - Complementar',\n    'Fundo Reserva - Garagem',\n    'Imposto - Energia / Água',\n    'Imposto - IPTU',\n    'Imposto - IPTU - 2016',\n    'Imposto - IPTU - 2017',\n    'Imposto - IPTU - 2018',\n    'Imposto - IPTU - Subsolo / Garagem',\n    'Imposto - IPTU - Terreno',\n    'Imposto sobre serviços de condomínio (ISS)',\n    'Individualização - Água',\n    'Individualização - Energia',\n    'Individualização - Gás',\n    'Instalação - Medidores',\n    'Instalação - Sistema de Segurança',\n    'Investimentos iniciais',\n    'ISS - Imposto sobre serviços de condomínio',\n    'Multa - Infração regulamentar',\n    'Pintura',\n    'Rateio - Aquisição / Instalação de Equipamentos',\n    'Rateio - Extra - Serviço / Obra',\n    'Rateio - Obras',\n    'Rateio Obras - Complementar',\n    'Reforma - Elevador',\n    'Reforma - Fachada',\n    'Reforma - Impermeabilização',\n    'Reforma - Tubulação',\n    'Reparo - Elétrico',\n    'Reparo - Hidráulico',\n    'Sistema Monitoramento/Segurança',\n    'Taxa municipal - Coleta de Lixo',\n    'Uso - Churrasqueira',\n    'Uso - Lavanderia',\n    'Uso - Serviço Condomínio',\n];\n\nexport default function ControllableStates() {\n    const [value, setValue] = React.useState(null);\n    const [inputValue, setInputValue] = React.useState('');\n\n    return (\n        <div>\n            \n            <Typography align=\"left\" variant=\"h6\">Nome da despesa</Typography>\n            <Typography variant=\"caption\" align=\"left\" >Qual nome mais se aproxima do que está escrito no boleto?</Typography>\n            <Autocomplete\n                value={value}\n                onChange={(event, newValue) => {\n                    if (typeof newValue === 'string') {\n                      setValue(newValue);\n                    } else if (newValue && newValue.inputValue) {\n                      // Create a new value from the user input\n                      setValue({\n                        title: newValue.inputValue,\n                      });\n                    } else {\n                      setValue(newValue);\n                    }\n                  }}\n\n                  \n\n                inputValue={inputValue}\n                noOptionsText=\"Não achei a despesa na lista\"\n\n                onInputChange={(event, newInputValue) => {\n                    setInputValue(newInputValue);\n                }}\n\n\n                id=\"controllable-states-demo\"\n                options={options}\n                style={{ width: '100%', marginBottom: '48px' }}\n                renderInput={(params) => <TextField {...params} label=\"\" variant=\"outlined\" />}\n            />\n        </div>\n    );\n}\n\n/* filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n          \n                    if (params.inputValue !== '') {\n                      filtered.push({\n                        inputValue: params.inputValue,\n                        title: `Add \"${params.inputValue}\"`,\n                      });\n                    }\n          \n                    return filtered;\n                  }}\n\n                  getOptionLabel={(option) => {\n                    // Value selected with enter, right from the input\n                    if (typeof option === 'string') {\n                      return option;\n                    }\n                    // Add \"xxx\" option created dynamically\n                    if (option.inputValue) {\n                      return option.inputValue;\n                    }\n\n                    // Regular option\n                    return option.title;\n                  }}\n */","const iptuTaxDescription = 'Imposto - IPTU  - Quando algum imposto ainda não foi desmembrado pela prefeitura';\n\nexport const expenses = [\n    {\n        name: \"Fundo - Reserva\",\n        url: \"FundoReserva\",\n        expenseGroup: \"Fundos\",\n        description: \"Descrição do fundo de reserva\",\n        searchable: \"Fundo - Reserva, Fundo de Reserva, Fundo Reserva\"\n    },\n    {\n        name: 'Acordo - Débito',\n        description: `Acordo-Débito é um valor, negociado em assembléia, utilizado para quitar débito anterior do\n        condomínio.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos, Débito de acordo\",\n        url: \"acordo-debito\",\n    },\n    {\n        name: 'Acordo - Judicial',\n        description: `Acordo-Judicial é um valor, negociado em assembléia, utilizado para quitar débito judicial do\n        condomínio.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordo judicial, acordo - judicial\"\n    },\n    {\n        name: 'Acordo - Trabalhista',\n        description: `Acordo - Trabalhista é um valor, negociado em assembléia, utilizado para quitar débito\n        trabalhista do condomínio.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - trabalhista, acordos trabalhistas, acordo trabalhista, acordo - trabalhista\"\n    },\n    {\n        name: 'Despesas - Extras',\n        description: `Despesas - Extras é um valor destinado ao pagamento de algum serviço ou obra necessário para\n        o bom funcionamento do condomínio. Também pode se referir a melhorias para a estrutura do edifício`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Documentação/Laudo',\n        description: `Documentação/Laudo - É um valor cobrado para o pagamento da emissão de laudos e pareceres de\n        orgãos regulamentadores.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto - Energia / Água',\n        description: 'Imposto - Energia / Água - Quando algum imposto ainda não foi desmembrado pela prefeitura',\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto - IPTU',\n        description: iptuTaxDescription,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto - IPTU - 2016',\n        description: iptuTaxDescription,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto - IPTU - 2017',\n        description: `Imposto - IPTU - 2017 - Quando algum imposto ainda não foi desmembrado pela prefeitura, o\n        condomínio paga um carnê único ao invés de cada unidade pagar um carnê individual. Desta forma, a\n        cobrança do imposto é rateada entre os moradores e incluída no boleto de condomínio. Esse refere-se\n        ao IPTU.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto - IPTU - 2018',\n        description: iptuTaxDescription,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto - IPTU - Subsolo / Garagem',\n        description: `Imposto - IPTU - Subsolo / Garagem - Quando algum imposto ainda não foi desmembrado pela\n        prefeitura`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto - IPTU - Terreno',\n        description: 'Imposto - IPTU - Terreno - Quando algum imposto ainda não foi desmembrado pela prefeitura',\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Imposto sobre serviços de condomínio (ISS)',\n        description: `Imposto sobre serviços de condomínio (ISS) - É uma cobrança referente aos impostos sobre\n        serviços do condomínio.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Multa - Infração regulamentar',\n        description: `Multa - Infração regulamentar é a cobrança gerada devido à infração do regulamento do\n        condomínio.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Taxa municipal - Coleta de Lixo',\n        description: `Taxa municipal - Coleta de lixo é uma cobrança feita pela Prefeitura da sua cidade, cobrada\n        diretamente no condomínio junto à cobrança de água e esgoto.`,\n        expenseGroup: \"Acordos\",\n        searchable: \"Acordos - Débitos\"\n    },\n    {\n        name: 'Fundo - AVCB',\n        description: `Fundo - AVCB é uma arrecadação destinada ao fundo utilizado para realizar o pagamento do\n  laudo AVCB (Auto de Vistoria do Corpo de Bombeiros). O laudo é obrigatório para os condomínios`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Benfeitorias',\n        description: `Fundo - Benfeitorias é um valor arrecadado ao fundo destinado a realização de obras e\n  melhorias no condomínio`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Estacionamento - Manutenção',\n        description: `Fundo - Estacionamento - Manutenção é um valor arrecadado para o fundo destinado à\n  manutenção e conservação das instalações do estacionamento/ garagem.`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Inadimplência',\n        description: `Fundo - Inadimplência  é um valor arrecadado para o fundo destinado a cobrir eventual\n  inadimplência das unidades.`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Indenização',\n        description: `Fundo - Indenização é um valor arrecadado para o fundo destinado a cobrir eventual\n  indenização com a qual o condomíno precise arcar.`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Investimentos',\n        description: `Fundo - Investimentos é um valor arrecadado ao fundo que se destina às enventuais obras\n  e melhorias no condomínio`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Melhorias',\n        description: 'Fundo - Melhorias é um valor arrecadado para enventuais obras e melhorias no condomínio',\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Obras',\n        description: 'Fundo - Obras é um valor arrecadado para eventuais obras e melhorias no condomínio',\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Provisões',\n        description: `Fundo - Provisões é uma cobrança destinada a cobrir despesas não previstas que venham a\n  surgir no condomínio.`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo - Reserva',\n        description: `Fundo - Reserva é um fundo destinado a cobrir despesas não previstas que venham a surgir\n  no condomínio.`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo Obras - Complementar',\n        description: 'Fundo Obras - Complementar é um valor arrecadado para eventuais obras e melhorias no condomínio.',\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo Reserva - Complementar',\n        description: `Fundo Reserva - Complementar é um fundo destinado a cobrir despesas não previstas que venham a surgir no condomínio.`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n    {\n        name: 'Fundo Reserva - Garagem',\n        description: `Fundo Reserva - Garagem é um fundo destinado a cobrir despesas não previstas que venham a surgir no condomínio.`,\n        expenseGroup: \"Fundos\",\n        searchable: \"Fundos\"\n    },\n\n    {\n        name: 'Individualização - Água',\n        description: `Individualização - Água é um valor destinado ao pagamento de serviços de individualização\n  das instalações de água do condomínio.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Individualização - Energia',\n        description: `Individualização - Energia é um valor destinado ao pagamento de serviços de individualização\n  dos medidores de energia do condomínio.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Individualização - Gás',\n        description: `Individualização - Gás é um valor destinado ao pagamento de serviços de individualização\n  das instalações de gás do condomínio.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Instalação - Medidores',\n        description: 'Instalação - Medidores é um valor destinado à instalação do sistema de medidores do condomínio.',\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Instalação - Sistema de Segurança',\n        description: `Instalação - Sistema de Segurança é um valor destinado à instalação do sistema de segurança\n  no condomínio.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Investimentos iniciais',\n        description: `Valor destinado ao pagamento de algum serviço ou obra necessário para o bom funcionamento\n  do condomínio. Também pode se referir a melhorias para a estrutura do edifício`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Pintura',\n        description: 'Pintura é um valor destinado ao pagamento de serviços de pintura  no condomínio.',\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Rateio - Aquisição / Instalação de Equipamentos',\n        description: `Rateio - Aquisição / Instalação de Equipamentos é um valor destinado ao pagamento de algum\n  serviço ou obra necessário para o bom funcionamento do condomínio. Também pode se referir a melhorias\n  para a estrutura do edifício`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Rateio - Extra - Serviço / Obra',\n        description: `Rateio - Extra - Serviço/Obra é um valor destinado ao pagamento de algum serviço ou obra\n  necessário para o bom funcionamento do condomínio. Também pode se referir a melhorias para a estrutura\n  do edifício.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Rateio - Obras',\n        description: `Rateio - Obras é um valor destinado ao pagamento de algum serviço ou obra necessário para\n  o bom funcionamento do condomínio. Também pode se referir a melhorias para a estrutura do edifício`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Rateio Obras - Complementar',\n        description: `Rateio Obras - Complementar é um valor destinado ao pagamento de algum serviço ou obra\n  necessário para o bom funcionamento do condomínio. Também pode se referir a melhorias para a estrutura\n  do edifício.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Reforma - Elevador',\n        description: 'Reforma - Elevador é um valor destinado ao pagamento de serviços de reparo/troca do elevador',\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Reforma - Fachada',\n        description: 'Reforma - Fachada é um valor destinado ao pagamento da reforma da fachada do condomínio.',\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Reforma - Impermeabilização',\n        description: `Reforma - Impermeabilização é um valor destinado ao pagamento de serviços de\n  impermebilização no condomínio.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Reforma - Tubulação',\n        description: 'Reforma - Tubulação é um valor destinado ao pagamento de serviços de reparo/troca de tubulações.',\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Reparo - Elétrico',\n        description: `Reparo - Elétrico é um valor destinado ao pagamento de reparos na instalação elétrica do\n  condomínio.`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Reparo - Hidráulico',\n        description: 'Reparo - Hidráulico é um valor destinado ao pagamento de reparos hidráulicos no condomínio.',\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n    {\n        name: 'Sistema Monitoramento/Segurança',\n        description: `Sistema Monitoramento/Segurança é um valor destinado ao pagamento do sistema de monitoramento\n  do condomínio`,\n        expenseGroup: \"Reformas\",\n        searchable: \"Individualização \"\n    },\n\n\n\n\n    {\n        name: 'Bonificação natalina',\n        description: `Despesa eventual normalmente acordada em assembleia e cobrada pela administradora do seu\n      condomínio.`,\n        expenseGroup: \"Outros\",\n        searchable: \"Bonificação \"\n    },\n    {\n        name: 'Cartão - Controle de acesso',\n        description: 'Cartão - Controle de acesso é a cobrança gerada pela compra de itens de acesso ao condomínio.',\n        expenseGroup: \"Outros\",\n        searchable: \"Bonificação \"\n    },\n    {\n        name: 'Deficit Orçamentário - Resp. Proprietário',\n        description: `Deficit Orçamentário é um valor cobrado do proprietário quando o condomínio está sem\n      dinheiro e precisou criar uma cobrança para sanar os gastos extraordinários e equilibrar as contas.`,\n        expenseGroup: \"Outros\",\n        searchable: \"Bonificação \"\n    },\n    {\n        name: 'Uso - Churrasqueira',\n        description: 'Uso - Churrasqueira é a cobrança gerada pelo uso da churrasqueira do condomínio.',\n        expenseGroup: \"Outros\",\n        searchable: \"Bonificação \"\n    },\n    {\n        name: 'Uso - Lavanderia',\n        description: 'Uso - Lavanderia é a cobrança gerada pelo uso da lavanderia do condomínio.',\n        expenseGroup: \"Outros\",\n        searchable: \"Bonificação \"\n    },\n    {\n        name: 'Uso - Serviço Condomínio',\n        description: `Uso - Serviço Condomínio é a cobrança gerada pelo uso individual dos serviços do\n      condomínio (como salão de festas e lavanderia) e pela aquisição de itens de acesso (controle, cartão).\n      Também pode ser referente à multa por infração das regras do condomínio.`,\n        expenseGroup: \"Outros\",\n        searchable: \"Bonificação \"\n    }\n\n];\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport NavBar from './NavBar'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport IconButton from '@material-ui/core/IconButton';\nimport { expenses } from '../ExpensesData'\nimport { Route, BrowserHistory, Switch } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\n\n\n\nimport { Typography, Button } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBarStyle: {\n        background: 'white',\n        color: 'black'\n    },\n    title: {\n        fontWeight: '600',\n        fontSize: '21px',\n        lineHeight: '24px',\n        color: '#424242',\n        margin: '0 0 0.5rem 0',\n    },\n    grid: {\n        padding: '1.5em 16px',\n    },\n    body1: {\n        fontSize: '14px',\n        lineHeight: '20px',\n        color: '#757575',\n    },\n    subheadingMedium: {\n        fontWeight: '600',\n        fontSize: '16px',\n        lineHeight: '24px',\n        color: '#424242',\n    },\n    grayHigh: {\n        color: '#424242',\n    },\n    buttonPrimary: {\n        textTransform: 'none',\n        fontWeight: '700',\n        borderRadius: '8px',\n        margin: '24px 0',\n        boxShadow: 'none'\n    }\n\n}));\n\n\nexport default function ExpenseDetail(props) {\n    const { match } = props;\n    const { params } = match;\n    const { ExpenseId } = params;\n\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    const [expenseInfo, setExpenseInfo] = useState(expenseData)\n\n    let expenseName = ExpenseId\n\n    const result = expenseInfo.filter(expenseRow => expenseRow.name == expenseName);\n\n    if (result.length > 0) {\n        return (\n            <>\n                <Grid container justify=\"center\">\n                    <Grid item xs={12}>\n                        <AppBar position=\"static\" className={classes.appBarStyle}>\n                            <ToolBar>\n                                <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                                    <ArrowBack />\n                                </IconButton>\n\n\n                                <Typography variant=\"h5\" color=\"inherit\">\n                                {expenseName}\n                            </Typography>\n                            </ToolBar>\n                        </AppBar>\n                    </Grid>\n                    <Grid item md={6} sm={12} className={classes.grid}>\n\n                        <Typography variant=\"h5\" className={classes.title}>{expenseName}</Typography>\n                        <Paper variant=\"outlined\">\n                            <Typography variant=\"h6\">Você pode pedir reembolso dessa despesa</Typography>\n                        </Paper>\n\n                        <Typography variant=\"body\"  className={classes.body1}>\n                            {result[0].description}\n                        </Typography>\n                        <br />\n                        <Button fullWidth size=\"large\" variant=\"contained\" className={classes.buttonPrimary} color=\"primary\">Pedir reembolso dessa despesa</Button>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n    else {\n        return (\n            <>\n                <NavBar> </NavBar>\n                <Typography variant=\"h4\">{expenseName}</Typography>\n                <Paper variant=\"outlined\">\n                    <Typography variant=\"h6\">Despesa não existente</Typography>\n\n                    <List>\n                        <ListItem button component={Link} to=\"/react-deploy/fundos/\">\n                            <ListItemText primary=\"Fundos\" secondary=\"Fundos para eventual inadimplência, obras no condomínio ou cobrir despesas não previstas. \" />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"comments\">\n                                    <ChevronRight />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n\n                        </ListItem>\n                    </List>\n\n                </Paper>\n            </>\n        );\n    }\n\n\n}","/* eslint-disable no-use-before-define */\nimport React, { useState } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete, {\n  createFilterOptions\n} from \"@material-ui/lab/Autocomplete\";\nimport parse from \"autosuggest-highlight/parse\";\nimport match from \"autosuggest-highlight/match\";\nimport { expenses } from '../ExpensesData'\nimport { Link } from 'react-router-dom'\n\nconst filter = createFilterOptions();\n\nexport default function AutocompleteHighlight() {\n  const expenseData = expenses.sort((a, b) => (a.name > b.name) ? 1 : -1);;\n\n  const [expenseInfo, setExpenseInfo] = useState(expenseData);\n\n\n  return (\n    <Autocomplete\n      id=\"highlights-demo\"\n      style={{ width: '100%' }}\n      options={expenseInfo}\n      getOptionLabel={option => option.searchable}\n      renderInput={params => (\n        <TextField {...params} variant=\"outlined\" margin=\"normal\" />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.name, inputValue);\n        const parts = parse(option.name, matches);\n\n        return (\n          <div>\n            {\n              parts.map((part, index) => (\n                <Link to={parts[index].text} >\n                  <span\n                    key={index}\n                    style={{ fontWeight: part.highlight ? 700 : 400 }}\n                  >\n                    {part.text}\n                  </span>\n                </Link>\n              ))}\n          </div>\n        );\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        console.log(params)\n\n        // Suggest the creation of a new value\n        if (params.inputValue !== \"\" && filtered.length == 0) {\n          filtered.push({\n            inputValue: params.inputValue,\n            name: `Não achei na lista`\n          });\n        }\n\n        return filtered;\n      }}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: \"Pulp Fiction\", year: 1994 },\n  { title: \"The Lord of the Rings: The Return of the King\", year: 2003 },\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n  { title: \"Fight Club\", year: 1999 },\n  { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001 },\n  { title: \"Star Wars: Episode V - The Empire Strikes Back\", year: 1980 },\n  { title: \"Forrest Gump\", year: 1994 },\n  { title: \"Inception\", year: 2010 },\n  { title: \"The Lord of the Rings: The Two Towers\", year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: \"Goodfellas\", year: 1990 },\n  { title: \"The Matrix\", year: 1999 },\n  { title: \"Seven Samurai\", year: 1954 },\n  { title: \"Star Wars: Episode IV - A New Hope\", year: 1977 },\n  { title: \"City of God\", year: 2002 },\n  { title: \"Se7en\", year: 1995 },\n  { title: \"The Silence of the Lambs\", year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: \"Life Is Beautiful\", year: 1997 },\n  { title: \"The Usual Suspects\", year: 1995 },\n  { title: \"Léon: The Professional\", year: 1994 },\n  { title: \"Spirited Away\", year: 2001 },\n  { title: \"Saving Private Ryan\", year: 1998 },\n  { title: \"Once Upon a Time in the West\", year: 1968 },\n  { title: \"American History X\", year: 1998 },\n  { title: \"Interstellar\", year: 2014 },\n  { title: \"Casablanca\", year: 1942 },\n  { title: \"City Lights\", year: 1931 },\n  { title: \"Psycho\", year: 1960 },\n  { title: \"The Green Mile\", year: 1999 },\n  { title: \"The Intouchables\", year: 2011 },\n  { title: \"Modern Times\", year: 1936 },\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\n  { title: \"Rear Window\", year: 1954 },\n  { title: \"The Pianist\", year: 2002 },\n  { title: \"The Departed\", year: 2006 },\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\n  { title: \"Back to the Future\", year: 1985 },\n  { title: \"Whiplash\", year: 2014 },\n  { title: \"Gladiator\", year: 2000 },\n  { title: \"Memento\", year: 2000 },\n  { title: \"The Prestige\", year: 2006 },\n  { title: \"The Lion King\", year: 1994 },\n  { title: \"Apocalypse Now\", year: 1979 },\n  { title: \"Alien\", year: 1979 },\n  { title: \"Sunset Boulevard\", year: 1950 },\n  {\n    title:\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\n    year: 1964\n  },\n  { title: \"The Great Dictator\", year: 1940 },\n  { title: \"Cinema Paradiso\", year: 1988 },\n  { title: \"The Lives of Others\", year: 2006 },\n  { title: \"Grave of the Fireflies\", year: 1988 },\n  { title: \"Paths of Glory\", year: 1957 },\n  { title: \"Django Unchained\", year: 2012 },\n  { title: \"The Shining\", year: 1980 },\n  { title: \"WALL·E\", year: 2008 },\n  { title: \"American Beauty\", year: 1999 },\n  { title: \"The Dark Knight Rises\", year: 2012 },\n  { title: \"Princess Mononoke\", year: 1997 },\n  { title: \"Aliens\", year: 1986 },\n  { title: \"Oldboy\", year: 2003 },\n  { title: \"Once Upon a Time in America\", year: 1984 },\n  { title: \"Witness for the Prosecution\", year: 1957 },\n  { title: \"Das Boot\", year: 1981 },\n  { title: \"Citizen Kane\", year: 1941 },\n  { title: \"North by Northwest\", year: 1959 },\n  { title: \"Vertigo\", year: 1958 },\n  { title: \"Star Wars: Episode VI - Return of the Jedi\", year: 1983 },\n  { title: \"Reservoir Dogs\", year: 1992 },\n  { title: \"Braveheart\", year: 1995 },\n  { title: \"M\", year: 1931 },\n  { title: \"Requiem for a Dream\", year: 2000 },\n  { title: \"Amélie\", year: 2001 },\n  { title: \"A Clockwork Orange\", year: 1971 },\n  { title: \"Like Stars on Earth\", year: 2007 },\n  { title: \"Taxi Driver\", year: 1976 },\n  { title: \"Lawrence of Arabia\", year: 1962 },\n  { title: \"Double Indemnity\", year: 1944 },\n  { title: \"Eternal Sunshine of the Spotless Mind\", year: 2004 },\n  { title: \"Amadeus\", year: 1984 },\n  { title: \"To Kill a Mockingbird\", year: 1962 },\n  { title: \"Toy Story 3\", year: 2010 },\n  { title: \"Logan\", year: 2017 },\n  { title: \"Full Metal Jacket\", year: 1987 },\n  { title: \"Dangal\", year: 2016 },\n  { title: \"The Sting\", year: 1973 },\n  { title: \"2001: A Space Odyssey\", year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: \"Toy Story\", year: 1995 },\n  { title: \"Bicycle Thieves\", year: 1948 },\n  { title: \"The Kid\", year: 1921 },\n  { title: \"Inglourious Basterds\", year: 2009 },\n  { title: \"Snatch\", year: 2000 },\n  { title: \"3 Idiots\", year: 2009 },\n  { title: \"Monty Python and the Holy Grail\", year: 1975 }\n];\n","import React from 'react';\nimport NavBar from './NavBar'\nimport FolderList from './List'\nimport Autocomplete from './Autocomplete'\nimport AutocompleteHighlight from './AutocompleteHightlight'\nimport Grid from '@material-ui/core/Grid'\nimport { Typography, makeStyles, Box } from '@material-ui/core';\n\n\nconst Home = () => {\n    const style = {\n        padding: '0 2em'\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        appBarStyle: {\n            background: 'white',\n            color: 'black'\n        },\n        title: {\n            fontWeight: '600',\n            fontSize: '21px',\n            lineHeight: '24px',\n            color: '#424242',\n            margin: '0 0 0.5rem 0',\n        },\n        grid: {\n            padding: '1.5em 16px',\n        },\n        body1: {\n            fontSize: '14px',\n            lineHeight: '20px',\n            color: '#757575',\n        },\n        subheadingMedium: {\n            fontWeight: '600',\n            fontSize: '16px',\n            lineHeight: '24px',\n            color: '#424242',\n        },\n        grayHigh: {\n            color: '#424242',\n        },\n        buttonSecondary: {\n            textTransform: 'none',\n            fontWeight: '700',\n            borderRadius: '8px',\n            margin: '24px 0'\n        },\n        boxBackground: {\n            background: '#FAFAFA'\n        }\n    \n    }));\n\n    const classes = useStyles();\n\n    return (\n        \n        <div className=\"App\">\n            <Grid container justify=\"center\" spacing={4}>\n                <Grid item xs={12}>\n                    <NavBar></NavBar>\n                </Grid>\n                <Grid item md={6} sm={12} style={style}>\n                    <Box className={classes.boxBackground}>\n                        <Typography variant=\"h6\">Veja se pode pedir reembolso de uma despesa</Typography>\n                        <Typography variant=\"body2\">Nome da despesa</Typography>\n                        <Typography variant=\"caption\">Qual nome mais se aproxima do que está escrito no boleto?</Typography>\n\n                        <AutocompleteHighlight></AutocompleteHighlight>\n                    </Box>\n                    <FolderList></FolderList>\n                </Grid>\n            </Grid>\n        </div>\n\n    )\n}\n\nexport default Home;\n","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport { expenses } from '../ExpensesData'\nimport Box from '@material-ui/core/Box'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBarStyle: {\n        background: 'white',\n        color: 'black'\n    },\n    title: {\n        fontWeight: '600',\n        fontSize: '21px',\n        lineHeight: '24px',\n        color: '#424242',\n        margin: '0 0 0.5rem 0',\n    },\n    grid: {\n        padding: '1.5em 16px',\n    },\n    body1: {\n        fontSize: '14px',\n        lineHeight: '20px',\n        color: '#757575',\n    },\n    subheadingMedium: {\n        fontWeight: '600',\n        fontSize: '16px',\n        lineHeight: '24px',\n        color: '#424242',\n    },\n    grayHigh: {\n        color: '#424242',\n    },\n    buttonSecondary: {\n        textTransform: 'none',\n        fontWeight: '700',\n        borderRadius: '8px',\n        margin: '24px 0'\n    }\n\n}));\n\n\n\n\nexport default function Acordos(props) {\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    const [expenseInfo, setExpenseInfo] = useState(expenseData)\n\n    function showExpense(expense) {\n\n        return (\n            <>\n                <ListItem button component={Link} to={`/${expense.url}`} >\n\n                    <ListItemText primary={expense.name} className={classes.body1, classes.grayHigh}/>\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"Go to Acordo\"  button component={Link} to={`/${expense.url}`}>\n                            <ChevronRight />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Divider />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={12}>\n                    <AppBar position=\"static\" className={classes.appBarStyle}>\n                        <ToolBar>\n                            <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                                <ArrowBack />\n                            </IconButton>\n\n\n                            <Typography variant=\"h5\" color=\"inherit\">\n                            Acordos, impostos e tarifas\n                            </Typography>\n                        </ToolBar>\n                    </AppBar>\n                </Grid>\n                <Grid item md={6} sm={12} className={classes.grid}>\n                    <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n                    Acordos, impostos e tarifas\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"inherit\" className={classes.body1}>\n                    Acordos referente a algum débito anterior do condomínio, impostos ou tarifas.\n                    </Typography>\n                    <Box mt=\"2rem\" />\n                    <Typography variant=\"h5\" color=\"inherit\" spacing=\"4\" className={classes.subheadingMedium}>\n                        Escolha uma despesa dessa categoria\n                    </Typography>\n\n\n\n                    <List className={classes.root}>\n                        {expenseInfo.map(expenseNumber => expenseNumber.expenseGroup == \"Acordos\" ? showExpense(expenseNumber) : undefined)}\n                    </List>\n\n                    <Button fullWidth variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.buttonSecondary} onClick={() => history.push(\"/\")}>Voltar à lista de reembolsos</Button>\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport { expenses } from '../ExpensesData'\nimport Box from '@material-ui/core/Box'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBarStyle: {\n        background: 'white',\n        color: 'black'\n    },\n    title: {\n        fontWeight: '600',\n        fontSize: '21px',\n        lineHeight: '24px',\n        color: '#424242',\n        margin: '0 0 0.5rem 0',\n    },\n    grid: {\n        padding: '1.5em 16px',\n    },\n    body1: {\n        fontSize: '14px',\n        lineHeight: '20px',\n        color: '#757575',\n    },\n    subheadingMedium: {\n        fontWeight: '600',\n        fontSize: '16px',\n        lineHeight: '24px',\n        color: '#424242',\n    },\n    grayHigh: {\n        color: '#424242',\n    },\n    buttonSecondary: {\n        textTransform: 'none',\n        fontWeight: '700',\n        borderRadius: '8px',\n        margin: '24px 0'\n    }\n\n}));\n\n\n\n\nexport default function Fundos(props) {\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    const [expenseInfo, setExpenseInfo] = useState(expenseData)\n\n    function showExpense(expense) {\n        console.dir(expense.name);\n\n\n        return (\n            <>\n                <ListItem button component={Link} to={`/${expense.url}`} >\n\n                    <ListItemText primary={expense.name} className={classes.body1, classes.grayHigh}/>\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"Go to Acordo\"  button component={Link} to={`/${expense.url}`}>\n                            <ChevronRight />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Divider />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={12}>\n                    <AppBar position=\"static\" className={classes.appBarStyle}>\n                        <ToolBar>\n                            <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                                <ArrowBack />\n                            </IconButton>\n\n\n                            <Typography variant=\"h5\" color=\"inherit\">\n                                Fundos\n                            </Typography>\n                        </ToolBar>\n                    </AppBar>\n                </Grid>\n                <Grid item md={6} sm={12} className={classes.grid}>\n                    <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n                        Fundos\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"inherit\" className={classes.body1}>\n                        Fundos para eventual inadimplência, obras no condomínio ou cobrir despesas não previstas.\n                    </Typography>\n                    <Box mt=\"2rem\" />\n                    <Typography variant=\"h5\" color=\"inherit\" spacing=\"4\" className={classes.subheadingMedium}>\n                        Escolha uma despesa dessa categoria\n                    </Typography>\n\n\n\n                    <List className={classes.root}>\n                        {expenseInfo.map(expenseNumber => expenseNumber.expenseGroup == \"Fundos\" ? showExpense(expenseNumber) : undefined)}\n                    </List>\n\n                    <Button fullWidth variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.buttonSecondary} onClick={() => history.push(\"/\")}>Voltar à lista de reembolsos</Button>\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport { expenses } from '../ExpensesData'\nimport Box from '@material-ui/core/Box'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBarStyle: {\n        background: 'white',\n        color: 'black'\n    },\n    title: {\n        fontWeight: '600',\n        fontSize: '21px',\n        lineHeight: '24px',\n        color: '#424242',\n        margin: '0 0 0.5rem 0',\n    },\n    grid: {\n        padding: '1.5em 16px',\n    },\n    body1: {\n        fontSize: '14px',\n        lineHeight: '20px',\n        color: '#757575',\n    },\n    subheadingMedium: {\n        fontWeight: '600',\n        fontSize: '16px',\n        lineHeight: '24px',\n        color: '#424242',\n    },\n    grayHigh: {\n        color: '#424242',\n    },\n    buttonSecondary: {\n        textTransform: 'none',\n        fontWeight: '700',\n        borderRadius: '8px',\n        margin: '24px 0'\n    }\n\n}));\n\n\n\n\nexport default function Reformas(props) {\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    const [expenseInfo, setExpenseInfo] = useState(expenseData)\n\n    function showExpense(expense) {\n\n        return (\n            <>\n                <ListItem button component={Link} to={`/${expense.url}`} >\n\n                    <ListItemText primary={expense.name} className={classes.body1, classes.grayHigh}/>\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"Go to Acordo\"  button component={Link} to={`/${expense.url}`}>\n                            <ChevronRight />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Divider />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={12}>\n                    <AppBar position=\"static\" className={classes.appBarStyle}>\n                        <ToolBar>\n                            <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                                <ArrowBack />\n                            </IconButton>\n\n\n                            <Typography variant=\"h5\" color=\"inherit\">\n                            Reformas, individualizações e rateios\n                            </Typography>\n                        </ToolBar>\n                    </AppBar>\n                </Grid>\n                <Grid item md={6} sm={12} className={classes.grid}>\n                    <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n                    Reformas, individualizações e rateios\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"inherit\" className={classes.body1}>\n                    Valores destinados ao pagamento de serviços ou obras para o funcionamento do condomínio\n                    </Typography>\n                    <Box mt=\"2rem\" />\n                    <Typography variant=\"h5\" color=\"inherit\" spacing=\"4\" className={classes.subheadingMedium}>\n                        Escolha uma despesa dessa categoria\n                    </Typography>\n\n\n\n                    <List className={classes.root}>\n                        {expenseInfo.map(expenseNumber => expenseNumber.expenseGroup == \"Reformas\" ? showExpense(expenseNumber) : undefined)}\n                    </List>\n\n                    <Button fullWidth variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.buttonSecondary} onClick={() => history.push(\"/\")}>Voltar à lista de reembolsos</Button>\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport { expenses } from '../ExpensesData'\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function Ordinarias(props) {\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    console.log(expenseData)\n\n    return (\n        <>\n\n            <p>Confira se a despesa não é de responsabilidade de inquilino e por isso não tem direito a reembolso:</p>\n            <Typography variant=\"h6\">Despesas de pagamento de inquilinos</Typography>\n            <Paper variant=\"outlined\">\n                <Typography variant=\"h6\">Você não tem direito a pedir reembolso das despesas de inquilinos</Typography>\n            </Paper>\n            <p><a href=\"#\">Consumos do imóvel, como água</a></p>\n            <p><a href=\"#\">Cotas condominiais</a></p>\n            <p><a href=\"#\">Correções na fatura</a></p>\n            <p><a href=\"#\">Encargos e honorários, como 13° salário</a></p>\n            <p><a href=\"#\">Fundos para manutenção</a></p>\n            <p><a href=\"#\">Impostos</a></p>\n            <p><a href=\"#\">Uso dos serviços do condomínio</a></p>\n\n            <Typography variant=\"h6\">Não é uma despesa de inquilino?</Typography>\n            <Button variant=\"contained\" color=\"primary\">Pedir reembolso dessa despesa</Button>\n\n        </>\n    );\n}","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport NavBar from './NavBar'\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport { expenses } from '../ExpensesData'\nimport Box from '@material-ui/core/Box'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Ordinarias from './Ordinarias';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBarStyle: {\n        background: 'white',\n        color: 'black'\n    },\n    title: {\n        fontWeight: '600',\n        fontSize: '21px',\n        lineHeight: '24px',\n        color: '#424242',\n        margin: '0 0 0.5rem 0',\n    },\n    grid: {\n        padding: '1.5em 16px',\n    },\n    body1: {\n        fontSize: '14px',\n        lineHeight: '20px',\n        color: '#757575',\n    },\n    subheadingMedium: {\n        fontWeight: '600',\n        fontSize: '16px',\n        lineHeight: '24px',\n        color: '#424242',\n    },\n    grayHigh: {\n        color: '#424242',\n    },\n    buttonSecondary: {\n        textTransform: 'none',\n        fontWeight: '700',\n        borderRadius: '8px',\n        margin: '24px 0'\n    }\n\n}));\n\n\n\n\nexport default function Outras(props) {\n    const classes = useStyles();\n    const { history } = props;\n    const expenseData = expenses;\n    const [expenseInfo, setExpenseInfo] = useState(expenseData)\n\n    function showExpense(expense) {\n\n        return (\n            <>\n                <ListItem button component={Link} to={`/${expense.url}`} >\n\n                    <ListItemText primary={expense.name} className={classes.body1, classes.grayHigh}/>\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"Go to Acordo\"  button component={Link} to={`/${expense.url}`}>\n                            <ChevronRight />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Divider />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={12}>\n                    <AppBar position=\"static\" className={classes.appBarStyle}>\n                        <ToolBar>\n                            <IconButton button edge=\"start\" className=\"Back\" color=\"inherit\" aria-label=\"menu\" onClick={() => history.push(\"/\")}>\n                                <ArrowBack />\n                            </IconButton>\n\n\n                            <Typography variant=\"h5\" color=\"inherit\">\n                            Outras despesas\n                            </Typography>\n                        </ToolBar>\n                    </AppBar>\n                </Grid>\n                <Grid item md={6} sm={12} className={classes.grid}>\n                    <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n                    Outras despesas\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"inherit\" className={classes.body1}>\n                    Despesas diversas, como deficit orcamentário, bonificação de fim de ano e usos de serviços do consomínio.\n                    </Typography>\n                    <Box mt=\"2rem\" />\n                    <Typography variant=\"h5\" color=\"inherit\" spacing=\"4\" className={classes.subheadingMedium}>\n                        Escolha uma despesa dessa categoria\n                    </Typography>\n\n\n\n                    <List className={classes.root}>\n                        {expenseInfo.map(expenseNumber => expenseNumber.expenseGroup == \"Outros\" ? showExpense(expenseNumber) : undefined)}\n                    </List>\n\n                    <Button fullWidth variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.buttonSecondary} onClick={() => history.push(\"/\")}>Voltar à lista de reembolsos</Button>\n\n\n                    <Divider></Divider>\n\n                    <Ordinarias></Ordinarias>\n                </Grid>\n            </Grid>\n        </>\n    );\n}","/* eslint-disable no-use-before-define */\nimport React, { Component } from 'react';\nimport { makeStyles} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nimport PropTypes from 'prop-types';\n\nexport class Autocomplete extends Component {\n  static propTypes = {\n    options: PropTypes.instanceOf(Array).isRequired\n  };\n  state = {\n    activeOption: 0,\n    filteredOptions: [],\n    showOptions: false,\n    userInput: ''\n  };\n\n  onChange = (e) => {\n    console.log('onChanges');\n\n    const { options } = this.props;\n    const userInput = e.currentTarget.value;\n\n    const filteredOptions = options.filter(\n      (optionName) =>\n        optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeOption: 0,\n      filteredOptions,\n      showOptions: true,\n      userInput: e.currentTarget.value\n    });\n  };\n\n  onClick = (e) => {\n    this.setState({\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n  onKeyDown = (e) => {\n    const { activeOption, filteredOptions } = this.state;\n\n    if (e.keyCode === 13) {\n      this.setState({\n        activeOption: 0,\n        showOptions: false,\n        userInput: filteredOptions[activeOption]\n      });\n    } else if (e.keyCode === 38) {\n      if (activeOption === 0) {\n        return;\n      }\n      this.setState({ activeOption: activeOption - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeOption === filteredOptions.length - 1) {\n        console.log(activeOption);\n        return;\n      }\n      this.setState({ activeOption: activeOption + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n\n      state: { activeOption, filteredOptions, showOptions, userInput }\n    } = this;\n    let optionList;\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = (\n          <ul className=\"options\">\n            {filteredOptions.map((optionName, index) => {\n              let className;\n              if (index === activeOption) {\n                className = 'option-active';\n              }\n              return (\n                <li className={className} key={optionName} onClick={onClick}>\n                  {optionName}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      } else {\n        optionList = (\n          <div className=\"no-options\">\n            <a href=\"/Others\">Não achei a despesa na lista</a>\n          </div>\n        );\n      }\n    }\n    return (\n      <>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            className=\"search-box\"\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            value={userInput}\n          />\n        </div>\n        {optionList}\n      </>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React from 'react';\nimport logo from './logo.svg';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\n\nimport NavBar from './components/NavBar'\nimport FolderList from './components/List'\nimport Autocomplete from './components/Autocomplete'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box';\nimport ExpenseDetail from './components/ExpenseDetail'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport Home from './components/Home'\nimport Acordos from './components/Acordos'\nimport Fundos from './components/Fundos'\nimport Reformas from './components/Reformas'\nimport Outras from './components/Outras'\nimport AutocompleteNoOptions from './components/AutcompleteNoOptions'\n\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Ordinarias from './components/Ordinarias';\n\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/acordos\" component={Acordos} />\n        <Route exact path=\"/fundos\" component={Fundos} />\n        <Route exact path=\"/reformas\" component={Reformas} />\n        <Route exact path=\"/outras\" component={Outras} />\n        <Route exact path=\"/:ExpenseId\" render={(props) => <ExpenseDetail {...props} />} />\n        \n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Router, Route, Link } from \"react-router-dom\";\n// import { Router as Router} from 'react-router-dom'\nimport { createBrowserHistory } from \"history\";\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\n\nconst history = createBrowserHistory();\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#E9E9FD',\n      main: '#5063F0',\n      dark: '#1F3BDF',\n    }\n\n  }\n\n})\n\nReactDOM.render(\n  <>\n    <ThemeProvider theme={theme}>\n      <HashRouter basename=\"/\" history={history}>\n        <App />\n      </HashRouter>\n    </ThemeProvider>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}